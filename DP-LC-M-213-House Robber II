class Solution {
    public int rob(int[] nums) {
        int n=nums.length;
        return tab(nums,n);
    }
    public int tab(int[] arr,int n){
        int[] dp = new int[n+1];
        if(arr.length==1) return arr[0];
        if(arr.length==2) return Math.max(arr[0],arr[1]);
        //For 0 to n-2 element
        dp[0]=arr[0];
        dp[1]=Math.max(arr[0],arr[1]);
        for(int i=2;i<n-1;i++){
            int p=dp[i-2]+arr[i];
            int np =dp[i-1];
            dp[i]=Math.max(p,np);
        }

        //For 1 to n-1 element 
        int ans1= dp[n-2];
        dp[0]=arr[1];
        dp[1]=Math.max(arr[2],arr[1]);
        for(int i=3;i<n;i++){
            int p=dp[i-3]+arr[i];
            int np =dp[i-2];
            dp[i-1]=Math.max(p,np);
        }
        int ans2=dp[n-2];
        return Math.max(ans2,ans1);


        
    }
}
